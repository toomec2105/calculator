{"version":3,"sources":["calculator/calculator.js"],"names":["digitContainer","document","getElementById","operationContainer","enter","display","historyCheckbox","historyDisplay","num1","num2","operator","records","history","calculate","result","symbol","parseInt","Math","pow","getBaseLog","record","createRecord","push","render","createRecordString","clearData","recordsString","i","length","Number","toFixed","console","log","includes","innerHTML","checked","addEventListener","e","target","id"],"mappings":";AAEA,IAAIA,EAAiBC,SAASC,eAAe,kBACzCC,EAAqBF,SAASC,eAAe,sBAC7CE,EAAQH,SAASC,eAAe,YAChCG,EAAUJ,SAASC,eAAe,WAClCI,EAAkBL,SAASC,eAAe,mBAC1CK,EAAiBN,SAASC,eAAe,WAEzCM,EAAO,GACPC,EAAO,GACPC,EAAW,KACXC,EAAU,GACVC,EAAU,GAsCd,SAASC,IACHC,IAAAA,EACAC,EAGIL,OAFRF,EAAOQ,SAASR,EAAM,IACtBC,EAAOO,SAASP,EAAM,IACdC,GACD,IAAA,MACHI,EAASN,EAAOC,EAChBM,EAAS,IACT,MACG,IAAA,WACHD,EAASN,EAAOC,EAChBM,EAAS,IACT,MACG,IAAA,WACHD,EAASN,EAAOC,EAChBM,EAAS,IACT,MACG,IAAA,SACHD,EAASN,EAAOC,EAChBM,EAAS,IACT,MACK,IAAA,QACLD,EAASG,KAAKC,IAAIV,EAAMC,GACxBM,EAAS,IACT,MACK,IAAA,MACLD,EAASK,EAAWX,EAAMC,GAC1BM,EAAS,MAITK,IAAAA,EAASC,EAAab,EAAMC,EAAMM,EAAQD,GAC9CH,EAAQW,KAAKF,GAGbG,EAAOT,EADYU,KAEnBC,IAIF,SAASA,IACPjB,EAAO,GACPC,EAAO,GACPC,EAAW,KAGb,SAASW,EAAab,EAAMC,EAAMM,EAAQD,GAOjCM,MANM,CACXZ,KAAMA,EACNC,KAAMA,EACNM,OAAQA,EACRD,OAAQA,GAKZ,SAASU,IAEF,IADDE,IAAAA,EACKC,EAAI,EAAGA,EAAIhB,EAAQiB,OAAQD,IAClCD,EACEf,EAAQgB,GAAGnB,KACX,IACAG,EAAQgB,GAAGZ,OACX,IACAJ,EAAQgB,GAAGlB,KACX,MACAoB,OAAOlB,EAAQgB,GAAGb,QAAQgB,QAAQ,GACpCC,QAAQC,IAAIN,GAEPA,OAAAA,EAGT,SAASH,EAAOT,EAAQM,GACS,GAA3BA,EAAOa,SAAS,SAAoD,GAAhCb,EAAOa,SAAS,eACtDrB,GAAW,MAAQQ,EAAS,OAC5Bf,EAAQ6B,UAAYlB,SAASF,EAAQ,IAAIgB,QAAQ,IAGpB,GAA3BxB,EAAgB6B,UACpB5B,EAAe2B,UAAYtB,GAG7B,SAASO,EAAWX,EAAMC,GACjBQ,OAAAA,KAAKe,IAAIvB,GAAQQ,KAAKe,IAAIxB,GAtHnCR,EAAeoC,iBAAiB,QAAS,SAAYC,GAC/B,aAAhBA,EAAEC,OAAOC,GAIG,MAAZ7B,GAEFqB,QAAQC,IAAIxB,GAEZA,GAAQ6B,EAAEC,OAAOC,GACjBlC,EAAQ6B,UAAY1B,EACpBuB,QAAQC,IAAI,yBAGZvB,GAAQ4B,EAAEC,OAAOC,GACjBR,QAAQC,IAAI,uBACZ3B,EAAQ6B,UAAYzB,GAdpBI,MAkBJV,EAAmBiC,iBAAiB,QAAS,SAAYC,GAEvD3B,EAAW2B,EAAEC,OAAOC,KAGtBjC,EAAgB8B,iBAAiB,QAAS,SAAYC,GACrB,GAA3B/B,EAAgB6B,QAClB5B,EAAe2B,UAAYtB,EAE3BL,EAAe2B,UAAY","file":"calculator.2825c646.js","sourceRoot":"../src","sourcesContent":["\r\n//HTML elements\r\nlet digitContainer = document.getElementById(\"digitContainer\");\r\nlet operationContainer = document.getElementById(\"operationContainer\");\r\nlet enter = document.getElementById(\"enterBtn\");\r\nlet display = document.getElementById(\"display\");\r\nlet historyCheckbox = document.getElementById(\"historyCheckbox\");\r\nlet historyDisplay = document.getElementById(\"history\");\r\n//other variables\r\nlet num1 = \"\";\r\nlet num2 = \"\";\r\nlet operator = null;\r\nlet records = [];\r\nlet history = \"\"; //\"<h3>History : </h3>\";\r\n// parent listening for children events\r\n\r\n//Event Listeners\r\ndigitContainer.addEventListener(\"click\", function fn(e) {\r\n  if (e.target.id === \"enterBtn\") {\r\n    calculate();\r\n    return;\r\n  }\r\n  if (operator == null) {\r\n    //console.log(typeof e.target.id); String\r\n    console.log(num1);\r\n  \r\n    num1 += e.target.id;\r\n    display.innerHTML = num1;\r\n    console.log(\"i am adding to num1\");\r\n    //console.log(typeof x);  Number\r\n  } else {\r\n    num2 += e.target.id;\r\n    console.log(\"i am adding to num1\");\r\n    display.innerHTML = num2;\r\n  }\r\n});\r\n\r\noperationContainer.addEventListener(\"click\", function fn(e) {\r\n  \r\n  operator = e.target.id;\r\n});\r\n\r\nhistoryCheckbox.addEventListener(\"click\", function fn(e) {\r\n  if (historyCheckbox.checked == true) {\r\n    historyDisplay.innerHTML = history;\r\n  }else{\r\n    historyDisplay.innerHTML = null;\r\n  }\r\n});\r\n\r\n//main methods\r\nfunction calculate() {\r\n  let result;\r\n  let symbol;\r\n  num1 = parseInt(num1, 10);\r\n  num2 = parseInt(num2, 10);\r\n  switch (operator) {\r\n    case \"add\":\r\n      result = num1 + num2;\r\n      symbol = \"+\";\r\n      break;\r\n    case \"subtract\":\r\n      result = num1 - num2;\r\n      symbol = \"-\";\r\n      break;\r\n    case \"multiply\":\r\n      result = num1 * num2;\r\n      symbol = \"*\";\r\n      break;\r\n    case \"divide\":\r\n      result = num1 / num2;\r\n      symbol = \"/\";\r\n      break;\r\n      case \"power\":\r\n      result = Math.pow(num1, num2);\r\n      symbol = \"^\";\r\n      break;\r\n      case \"log\":\r\n      result = getBaseLog(num1, num2);\r\n      symbol = \"log\";\r\n      break;\r\n  }\r\n\r\n  let record = createRecord(num1, num2, symbol, result);\r\n  records.push(record);\r\n\r\n  let recordString = createRecordString();\r\n  render(result, recordString);\r\n  clearData();\r\n}\r\n\r\n//helpers\r\nfunction clearData() {\r\n  num1 = \"\";\r\n  num2 = \"\";\r\n  operator = null;\r\n}\r\n\r\nfunction createRecord(num1, num2, symbol, result) {\r\n  let record = {\r\n    num1: num1,\r\n    num2: num2,\r\n    symbol: symbol,\r\n    result: result\r\n  };\r\n  return record;\r\n}\r\n\r\nfunction createRecordString() {\r\n  let recordsString;\r\n  for (let i = 0; i < records.length; i++) {\r\n    recordsString =\r\n      records[i].num1 +\r\n      \" \" +\r\n      records[i].symbol +\r\n      \" \" +\r\n      records[i].num2 +\r\n      \" = \" +\r\n      Number(records[i].result).toFixed(2);\r\n    console.log(recordsString);\r\n  }\r\n  return recordsString;\r\n}\r\n\r\nfunction render(result, record) { \r\n  if (record.includes(\"null\") == false && record.includes(\"undefined\") == false){\r\n    history += \"<p>\" + record + \"</p>\";\r\n    display.innerHTML = parseInt(result, 10).toFixed(2);\r\n  }\r\n  \r\n  if (historyCheckbox.checked == true) {\r\n  historyDisplay.innerHTML = history;\r\n  }\r\n}\r\nfunction getBaseLog(num1, num2) {\r\n  return Math.log(num2) / Math.log(num1);\r\n}"]}